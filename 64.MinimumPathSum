In this we will be traversing from last number and then visit each row one by one



class Solution {
    public int minPathSum(int[][] grid) {
        int n =grid.length;
      int m =  grid[0].length;
        int[][] dp=new int[n][m]; // we have created a simple array in which we update
        for(int i=dp.length-1 ; i>=0 ; i--){
             for(int j=dp[0].length-1 ; j>=0 ; j--){
            if( i == dp.length-1 && j== dp[0].length-1){ // last number path should be equal to itself only
                dp[i][j]=grid[i][j];
            }
           else if( i == dp.length-1){
               dp[i][j]=dp[i][j+1]+grid[i][j]; // elements of last horizontal  row
           }
            else if( j == dp[0].length-1){
               dp[i][j]=dp[i+1][j]+grid[i][j]; // elements of last vertical row
           }
                 else{
                     dp[i][j]=Math.min( dp[i+1][j]+grid[i][j] , dp[i][j+1]+grid[i][j]); // now remaining elements
                 }
         }
        }
        return dp[0][0];
    }
}
